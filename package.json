{
    "name": "@goparrot/eslint-config",
    "version": "1.2.1",
    "description": "GoParrot shared eslint configuration",
    "author": "GoParrot Inc.",
    "license": "ISC",
    "repository": {
        "type": "git",
        "url": "git+https://github.com/goparrot/eslint-config.git"
    },
    "bugs": {
        "url": "https://github.com/goparrot/eslint-config/issues"
    },
    "homepage": "https://github.com/goparrot/eslint-config#readme",
    "keywords": [
        "eslint",
        "prettier"
    ],
    "lint-staged": {
        "*.{ts,tsx,json,js,jsx}": [
            "npm run format:base"
        ],
        "*.md": [
            "npm run prettier:base"
        ]
    },
    "config": {
        "commitizen": {
            "path": "cz-conventional-changelog"
        }
    },
    "scripts": {
        "commit": "git-cz",
        "prepare": "husky install",
        "prettier": "npm run prettier:base -- '**/**.+(md)'",
        "prettier:base": "prettier --ignore-path .eslintignore --write",
        "format": "npm run prettier && npm run lint -- --fix",
        "format:base": "npm run lint:base -- --fix",
        "format:staged": "git add . && lint-staged --allow-empty -q",
        "lint": "npm run lint:base -- './**/**.{ts,tsx,js,json}'",
        "lint:base": "npm run lint:config:check && eslint",
        "lint:config:check": "eslint-config-prettier src/index.ts",
        "build": "rimraf dist/* && tsc -b tsconfig.build.json && ts-node -T bin/prepublish.ts",
        "typecheck": "tsc -p tsconfig.json --noEmit",
        "pre-commit": "git add . && run-p typecheck build && run-p format:staged && run-p lint",
        "prepublishOnly": "echo \"use 'npm run release:dev' or 'npm run version' and make PR to master branch, CD/CI will do the rest of the work\" && exit 1",
        "publish:stable": "npm run build && ts-node bin/prepublish.ts && npm publish ./dist",
        "publish:next": "npm version prerelease --no-git-tag-version --preid next && npm run publish:stable -- --tag next",
        "publish:dry": "npm run publish:stable -- --dry-run"
    },
    "peerDependencies": {
        "eslint-plugin-react": "^7.0.0",
        "eslint-plugin-react-hooks": "^4.0.0",
        "typescript": "^4.0.0 || ^5.0.0"
    },
    "peerDependenciesMeta": {
        "eslint-plugin-react": {
            "optional": true
        },
        "eslint-plugin-react-hooks": {
            "optional": true
        }
    },
    "dependencies": {
        "@typescript-eslint/eslint-plugin": "^7.3.1",
        "@typescript-eslint/parser": "^7.3.1",
        "eslint": "^8.57.0",
        "eslint-config-prettier": "^9.1.0",
        "eslint-import-resolver-typescript": "3.6.0",
        "eslint-plugin-import": "^2.29.1",
        "eslint-plugin-prettier": "^5.1.3",
        "prettier": "^3.2.5",
        "tslib": "^2.6.2"
    },
    "devDependencies": {
        "@commitlint/cli": "^19.2.1",
        "@commitlint/config-conventional": "^19.1.0",
        "@tsconfig/node18": "^18.2.3",
        "@types/eslint": "^8.56.10",
        "@types/node": "^20.11.30",
        "commitizen": "^4.3.0",
        "conventional-github-releaser": "^3.1.5",
        "eslint-plugin-react": "^7.34.1",
        "eslint-plugin-react-hooks": "^4.6.0",
        "husky": "^9.0.11",
        "lint-staged": "^15.2.2",
        "npm-run-all": "^4.1.5",
        "rimraf": "^6.0.1",
        "ts-node": "^10.9.2",
        "typescript": "^5.4.3"
    }
}
